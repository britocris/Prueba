{"version":3,"sources":["SearchAppBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","initialState","paginInput","fetched","urlBase","pagin","data","users","cadena1","cadena2","Theme","createStyles","progress","margin","card","marginTop","maxWidth","media","button","input","App","useState","state","setState","useEffect","fetch","then","response","json","Container","Row","Grid","container","justify","map","user","index","lg","md","sm","xs","item","key","Card","CardActionArea","CardMedia","image","avatar","CardContent","style","fontWeight","first_name","last_name","acumulado","length","per_page","toFixed","countNameLetters","Pagination","PaginationItem","disabled","PaginationLink","onClick","type","max","total_pages","min","value","onChange","e","target","name","parseInt","handlerChangePaginInput","id","CircularProgress","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf421a4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Prueba Artear\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container, Row } from 'reactstrap'\r\nimport React, {useState, useEffect} from 'react';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport SearchAppBar from './SearchAppBar'\r\n\r\n\r\nconst initialState =  {\r\n  paginInput: 1,\r\n  fetched: false,\r\n  urlBase: 'https://reqres.in/api/users?page=',\r\n  pagin: 1,\r\n  data: {},\r\n  users: [],\r\n  cadena1: \"en5 4terremoto NAS1A regi2strÃ³ L0a M6arte u3n\",\r\n  cadena2: \"ma2r ma5rinos al1 tr3es Dev0olvieron lo4bos \"\r\n}\r\n\r\nconst useStyles = makeStyles((Theme) =>\r\n  createStyles({\r\n    progress: {\r\n      margin: Theme.spacing(2),\r\n    },\r\n    card: {\r\n      marginTop: 15,\r\n      maxWidth: 150,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    button: {\r\n      margin: Theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }),\r\n);\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const {paginInput, fetched, urlBase, pagin, data, users, cadena1, cadena2} = state;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    function fetchUsers() {\r\n      fetch(urlBase + pagin)\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(users) {\r\n        setState({\r\n          ...state,\r\n          fetched: true,\r\n          data: users,\r\n          users: users.data\r\n        })\r\n      });\r\n    }\r\n    fetchUsers();\r\n  }, [pagin])\r\n\r\n  function countNameLetters() {\r\n    let acumulado = 0\r\n    users.map((user) => {\r\n      if(user.first_name.length + user.last_name.length > 12) {\r\n        acumulado = acumulado + 1;\r\n      }\r\n    }) \r\n    return ((acumulado / data.per_page) * 100).toFixed(2) ;\r\n  }\r\n\r\n  function handlerChangePaginInput(e) { \r\n    setState({\r\n      ...state,\r\n      [e.target.name] : e.target.value,\r\n      pagin: parseInt(e.target.value)\r\n    })\r\n  }\r\n\r\n  function ordenarString (cadenaDesordenada) {\r\n    let newCadena = cadenaDesordenada.split(\" \")\r\n    let cadenaOrdenada = \"\"\r\n    for(let i = 0; i < newCadena.length; i++) {\r\n      newCadena.find((elemento) => {\r\n        if(elemento.includes(i)) {\r\n          cadenaOrdenada = cadenaOrdenada + elemento + \" \"\r\n        }\r\n      });\r\n    }\r\n    return cadenaOrdenada;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchAppBar/>\r\n      { fetched ? \r\n      <Container>\r\n        <Row>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {users.map((user, index) => (\r\n              <Grid lg={2} md={2} sm={4} xs={6} item key={index} >\r\n                <Card className={classes.card}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image={user.avatar}\r\n                    />\r\n                    <CardContent>\r\n                      <h6 style={{ fontWeight: 500 }} className=\"tipografy\">\r\n                        {user.first_name} {user.last_name}\r\n                      </h6>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid >\r\n            ))}\r\n          </Grid>\r\n        </Row>\r\n        \r\n        <div className=\"percentContainer\">\r\n          <label> Porcentaje mayor de 12 caracteres: {countNameLetters()}% </label>\r\n        </div>\r\n\r\n        <Pagination aria-label=\"Page navigation example\" className=\"pagination\">\r\n          <PaginationItem disabled={ pagin <= 1 }>\r\n            <PaginationLink onClick={ () => setState({...state, pagin: pagin - 1, fetched: false })} >\r\n              Prev\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n          <input type=\"number\" max={data.total_pages} min={1}  value={pagin} onChange={(e) => handlerChangePaginInput(e, paginInput)} name=\"paginInput\" id=\"\"/>\r\n          <PaginationItem disabled={pagin >= data.total_pages} >\r\n            <PaginationLink onClick={ () => setState({...state, pagin: pagin + 1, fetched: false })} >\r\n              Next\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        </Pagination>\r\n      </Container> :\r\n      <div className=\"spinner\"> \r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}